{
  "createdAt": "2025-03-04T20:22:26.797Z",
  "updatedAt": "2025-04-12T23:54:26.312Z",
  "id": "oqCdbJQNDx83LHtF",
  "name": "jobber_visits_sync  v7",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -280,
        -20
      ],
      "id": "8eac2743-0b21-43f4-8b48-ff13dd89c5ba",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "try {\n    const responseData = item.json || item;\n    const result = Array.isArray(responseData) ? responseData[0] : responseData;\n    \n    if (!result?.data?.visits) {\n        throw new Error('Invalid response structure');\n    }\n    \n    const { nodes, pageInfo } = result.data.visits;\n    const existingData = Array.isArray(item?.json?.allData) ? item.json.allData : [];\n    const allData = [...existingData, ...nodes];\n\n    return {\n        json: {\n            allData,\n            data: nodes,\n            variables: {\n                first: 5,\n                after: pageInfo.endCursor\n            },\n            continuePagination: pageInfo.hasNextPage,\n            completed: !pageInfo.hasNextPage\n        }\n    };\n} catch (error) {\n    console.log('Error:', error.message);\n    return {\n        json: {\n            error: error.message,\n            continuePagination: false,\n            completed: true,\n            allData: item.json.allData || []\n        }\n    };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        300,
        -20
      ],
      "id": "520ab7c2-8766-4cd5-8b32-f0b08b4b92ed",
      "name": "pagination"
    },
    {
      "parameters": {
        "operation": "incr",
        "key": "counter"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        740,
        620
      ],
      "id": "4f8cf573-f6da-42fa-a895-ad43e2e15f51",
      "name": "counter_2",
      "credentials": {
        "redis": {
          "id": "Yj8Yu3a3AZgluvcL",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "counter",
        "value": "0"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -80,
        -20
      ],
      "id": "1d00438f-cd6f-485c-88ce-9969eb39dc67",
      "name": "counter_1",
      "credentials": {
        "redis": {
          "id": "Yj8Yu3a3AZgluvcL",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "endpoint": "https://api.getjobber.com/api/graphql",
        "requestFormat": "json",
        "query": "=query($first: Int!, $after: String) {\n  visits(first: $first, after: $after) {\n    nodes {\n      id\n      client {\n        id\n      }\n      property {\n        id\n      }\n      job {\n        id\n      }\n      invoice {\n        id\n      }\n      title              \n      isDefaultTitle     \n      instructions       \n      allDay             \n      arrivalWindow {    \n        id \n        duration\n      }\n      startAt            \n      endAt              \n      duration           \n      visitStatus        \n      completedAt        \n      assignedUsers {    \n        edges {\n          node {\n            name {\n              first \n              last\n            }\n          }\n        }\n      }\n      isComplete         \n      isLastScheduledVisit \n      timeSheetEntries {   \n        edges {\n          node {\n            id          \n            startAt\n            endAt\n          }\n        }\n      }\n      lineItems {        \n        edges {\n          node {\n            id\n            name\n            quantity\n            totalPrice                      \n          }\n        }\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}",
        "variables": "={{ $json.variables || {\"first\": 5, \"after\": null} }}",
        "headerParametersUi": {
          "parameter": [
            {
              "name": "X-JOBBER-GRAPHQL-VERSION",
              "value": "2025-01-20"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.graphql",
      "typeVersion": 1,
      "position": [
        120,
        -20
      ],
      "id": "f564683b-6c09-4c51-918d-f9944200db81",
      "name": "jobber query",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Pztii0f4FvnCkBNB",
          "name": "Jobber_HeaderAuth"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2b3e8ec4-ba57-4716-b420-44b81136d6f1",
              "leftValue": "={{ $('counter_2').item.json.counter }}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            },
            {
              "id": "da7dcbb5-9ca9-4926-8e09-286907986e21",
              "leftValue": "={{ $('pagination').item.json.continuePagination }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1140,
        620
      ],
      "id": "0e178022-8ff5-4f58-87f7-e40970d489da",
      "name": "batch loop"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1NLMxrZUsc7SPTRLh2BzuRe-CaCo5LUkXDDT9nvJf2xo",
          "mode": "list",
          "cachedResultName": "jobber_data_sync",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1NLMxrZUsc7SPTRLh2BzuRe-CaCo5LUkXDDT9nvJf2xo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 65013384,
          "mode": "list",
          "cachedResultName": "visits",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1NLMxrZUsc7SPTRLh2BzuRe-CaCo5LUkXDDT9nvJf2xo/edit#gid=65013384"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ $json.title }}",
            "isDefaultTitle": "={{ $json.isDefaultTitle }}",
            "instructions": "={{ $json.instructions }}",
            "allDay": "={{ $json.allDay }}",
            "arrivalWindow": "={{ $json.arrivalWindow }}",
            "duration": "={{ $json.duration }}",
            "visitStatus": "={{ $json.visitStatus }}",
            "completedAt": "={{ $json.completedAt }}",
            "assignedUsers": "={{ $json.assignedUsers }}",
            "isComplete": "={{ $json.isComplete }}",
            "isLastScheduledVisit": "={{ $json.isLastScheduledVisit }}",
            "id": "={{ $json.id }}",
            "client": "={{ $json.client.id }}",
            "property": "={{ $json.property.id }}",
            "job": "={{ $json.job.id }}",
            "invoice": "={{ $json.invoice }}",
            "startAt": "={{ $json.startAt }}",
            "endAt": "={{ $json.endAt }}",
            "timeSheetEntries": "={{ $json.timeSheetEntries.edges }}",
            "lineItems": "={{ $json.lineItems.edges }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "client",
              "displayName": "client",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "property",
              "displayName": "property",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "job",
              "displayName": "job",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "invoice",
              "displayName": "invoice",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "isDefaultTitle",
              "displayName": "isDefaultTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "instructions",
              "displayName": "instructions",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "allDay",
              "displayName": "allDay",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "arrivalWindow",
              "displayName": "arrivalWindow",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "startAt",
              "displayName": "startAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "endAt",
              "displayName": "endAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "visitStatus",
              "displayName": "visitStatus",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "completedAt",
              "displayName": "completedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "assignedUsers",
              "displayName": "assignedUsers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "isComplete",
              "displayName": "isComplete",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "isLastScheduledVisit",
              "displayName": "isLastScheduledVisit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "timeSheetEntries",
              "displayName": "timeSheetEntries",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "lineItems",
              "displayName": "lineItems",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        660,
        -20
      ],
      "id": "6e6ace53-cf33-4757-a343-5be44ce32cd9",
      "name": "posting data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "McEu2DZdx8KDjIrj",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1NLMxrZUsc7SPTRLh2BzuRe-CaCo5LUkXDDT9nvJf2xo",
          "mode": "list",
          "cachedResultName": "jobber_data_sync",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1NLMxrZUsc7SPTRLh2BzuRe-CaCo5LUkXDDT9nvJf2xo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 65013384,
          "mode": "list",
          "cachedResultName": "visits",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1NLMxrZUsc7SPTRLh2BzuRe-CaCo5LUkXDDT9nvJf2xo/edit#gid=65013384"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -260,
        -320
      ],
      "id": "484556de-0027-4719-8d21-8657c6cd362e",
      "name": "getting data",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "McEu2DZdx8KDjIrj",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "eff9cc2d-c364-4859-902e-3ceb34481092",
              "name": "variables.first",
              "value": "={{ $('pagination').item.json.variables.first }}",
              "type": "number"
            },
            {
              "id": "499c7162-3df3-484c-85c2-d5f72b7bd3ec",
              "name": "variables.after",
              "value": "={{ $('pagination').item.json.variables.after }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        940,
        620
      ],
      "id": "308794d2-5738-4850-abd7-cf414e722d8f",
      "name": "set loop"
    },
    {
      "parameters": {
        "jsCode": "// Pegamos os dados do input\nconst inputData = $input.all();\n\n// Garantimos que existe um array `allData` dentro do primeiro item do input\nconst allData = inputData[0]?.json?.allData || [];\n\n// Retornamos a array diretamente, sem objetos extras\nreturn allData.map(item => ({ json: item }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        480,
        -20
      ],
      "id": "2200db6f-75f5-473b-b0ff-d47b280963e5",
      "name": "Set Array"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        3440,
        360
      ],
      "id": "5a412c40-63d4-4bee-b586-4b34d6f95c38",
      "name": "Limit"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "17Q8JR3gkVs6yd_RYbLcuVfZCLV7OalSjlREqtZUJBPc",
          "mode": "list",
          "cachedResultName": "jobber_visits_1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/17Q8JR3gkVs6yd_RYbLcuVfZCLV7OalSjlREqtZUJBPc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Página1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/17Q8JR3gkVs6yd_RYbLcuVfZCLV7OalSjlREqtZUJBPc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "visit_id": "={{ $json.visit_id }}",
            "firstname": "={{ $('Set Array1').item.json.firstname }}",
            "lastname": "={{ $('Set Array1').item.json.lastname }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "visit_id",
              "displayName": "visit_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "firstname",
              "displayName": "firstname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "lastname",
              "displayName": "lastname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2060,
        -300
      ],
      "id": "cc2999a9-7420-4d1d-9c4f-7037aac9afb0",
      "name": "upsert visits_users",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "McEu2DZdx8KDjIrj",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1G1-0Bfs_02F0W26LbRIDwdxUUOlj2ghveCrlzSPEXVg",
          "mode": "list",
          "cachedResultName": "jobber_visits_2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G1-0Bfs_02F0W26LbRIDwdxUUOlj2ghveCrlzSPEXVg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Página1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G1-0Bfs_02F0W26LbRIDwdxUUOlj2ghveCrlzSPEXVg/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "visit_id": "={{ $json.visit_id }}",
            "name": "={{ $json.name }}",
            "quantity": "={{ $json.quantity }}",
            "totalPrice": "={{ $json.totalPrice }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "visit_id",
              "displayName": "visit_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "quantity",
              "displayName": "quantity",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "totalPrice",
              "displayName": "totalPrice",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2280,
        220
      ],
      "id": "3161bed8-72f4-4def-b968-b3c290215601",
      "name": "upsert visits_itens",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "McEu2DZdx8KDjIrj",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1220,
        -500
      ],
      "id": "e8966097-a1c4-4dac-a1d8-03d10e649060",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "// Pegamos os dados do input\nconst inputData = $input.all();\n\n// Garantimos que existe um array de entrada\nconst data = inputData[0]?.json || {};\n\n// Função para gerar um ID único\nfunction generateUUID() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\n// Retornamos a array diretamente, sem objetos extras\nreturn data.assignedUsers.edges.map(user => ({\n    json: {\n        id: `${generateUUID()}`, // Gerando um ID único baseado no ID da tabela\n        visit_id: data.id, // Usando o ID fornecido\n        firstname: user.node.name.first,\n        lastname: user.node.name.last\n    }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1480,
        -420
      ],
      "id": "07338747-5fe0-4338-9ba7-c9b7684db9c3",
      "name": "Set Array1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "708d40af-63b6-4b7b-835f-d860e074b34c",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1780,
        -440
      ],
      "id": "5885c049-c49e-4590-b190-0e1f69e55c6a",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "// Pegamos os dados do input \nconst inputData = $input.all();\n// Garantimos que existe um array de entrada \nconst data = inputData[0]?.json || {};\n\n// Mapeamos diretamente os itens de lineItems, pois é um array\nreturn (data.lineItems || []).map(item => ({ \n  json: { \n    visit_id: data.id, \n    id: item.node.id, \n    name: item.node.name, \n    quantity: item.node.quantity, \n    totalPrice: item.node.totalPrice \n  } \n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1620,
        140
      ],
      "id": "a06fc22d-acfb-4b3d-9768-fd2a0b519134",
      "name": "Set Array2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "708d40af-63b6-4b7b-835f-d860e074b34c",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1800,
        140
      ],
      "id": "6c22f775-39d1-4b58-9a55-8af8189cd48d",
      "name": "If1"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1200,
        40
      ],
      "id": "bcd65a58-ae3b-4e20-922e-689957cee2fe",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2900,
        -520
      ],
      "id": "17ba5c6c-8160-4c0f-85e4-b7f6950a0ec4",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2920,
        20
      ],
      "id": "6e7a6f66-0104-42c7-9c33-615d873b65f5",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d03cd9f8-03a1-4d5d-b56e-1c707314ad51",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2280,
        -300
      ],
      "id": "51c95884-c402-4dab-b260-5addbdf44e36",
      "name": "If2"
    }
  ],
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "counter_1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pagination": {
      "main": [
        [
          {
            "node": "Set Array",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "counter_2": {
      "main": [
        [
          {
            "node": "set loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "counter_1": {
      "main": [
        [
          {
            "node": "jobber query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "jobber query": {
      "main": [
        [
          {
            "node": "pagination",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "batch loop": {
      "main": [
        [],
        [
          {
            "node": "jobber query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "posting data": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set loop": {
      "main": [
        [
          {
            "node": "batch loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Array": {
      "main": [
        [
          {
            "node": "posting data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "counter_2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upsert visits_users": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "upsert visits_itens": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Array1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Array1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "upsert visits_users",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Array2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "upsert visits_itens",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Array2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "c48c1e82-40c7-429b-8d16-a91ce9b1d7f3",
  "triggerCount": 0,
  "tags": []
}